version: '3'

services:
  app:
    build: ./backend/
    depends_on:
      - db
    ports:
      - "${PORT}:${PORT}"
    networks:
      - backend
    environment:
      - PORT=$PORT
      - MODE=$MODE

  client:
    networks:
      - frontend
    build:
        context: ./client
    command: npm start
    volumes:
      - ./client
    ports:
      - "${CLIENT_PORT}:${CLIENT_PORT}"

  flutter:
  build: ./flutter/
  depends_on:
    - db
  volumes_from:
     - client
  ports:
    - "${FLU_PORT}:${FLU_PORT}"
  networks:
    - flutter
  environment:
    - PORT=$FLU_PORT
    - MODE=$MODE
  command: tail -F anything

  db:
    image: postgres:alpine
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - backend
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./backend/src/schema/schema.sql:/docker-entrypoint-initdb.d/schema.sql

networks:
  backend:
  frontend:
  flutter:

volumes:
  db-data:
